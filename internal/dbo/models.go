// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package dbo

import (
	"time"

	"github.com/reddec/dreaming-bard/internal/common"
)

type Blueprint struct {
	ID        int64     `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Note      string    `json:"note"`
}

type BlueprintChat struct {
	ID          int64 `json:"id"`
	BlueprintID int64 `json:"blueprint_id"`
	ChatID      int64 `json:"chat_id"`
}

type BlueprintLinkedContext struct {
	ID          int64 `json:"id"`
	BlueprintID int64 `json:"blueprint_id"`
	ContextID   int64 `json:"context_id"`
}

type BlueprintLinkedPage struct {
	BlueprintID int64 `json:"blueprint_id"`
	PageID      int64 `json:"page_id"`
	Inline      bool  `json:"inline"`
}

type BlueprintStep struct {
	ID          int64     `json:"id"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
	BlueprintID int64     `json:"blueprint_id"`
	Content     string    `json:"content"`
}

type Chat struct {
	ID           int64     `json:"id"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
	InputTokens  int64     `json:"input_tokens"`
	OutputTokens int64     `json:"output_tokens"`
	Draft        string    `json:"draft"`
	RoleID       int64     `json:"role_id"`
	Annotation   string    `json:"annotation"`
}

type Context struct {
	ID        int64     `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Title     string    `json:"title"`
	Category  string    `json:"category"`
	Content   string    `json:"content"`
	Archived  bool      `json:"archived"`
}

type Message struct {
	ID        int64       `json:"id"`
	ChatID    int64       `json:"chat_id"`
	CreatedAt time.Time   `json:"created_at"`
	Content   string      `json:"content"`
	Role      common.Role `json:"role"`
	ToolID    string      `json:"tool_id"`
	ToolName  string      `json:"tool_name"`
}

type Page struct {
	ID        int64     `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Summary   string    `json:"summary"`
	Content   string    `json:"content"`
	Num       int64     `json:"num"`
}

type Preference struct {
	Name      string    `json:"name"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Value     string    `json:"value"`
}

type Prompt struct {
	ID        int64      `json:"id"`
	CreatedAt time.Time  `json:"created_at"`
	UpdatedAt time.Time  `json:"updated_at"`
	Summary   string     `json:"summary"`
	Content   string     `json:"content"`
	RoleID    int64      `json:"role_id"`
	PinnedAt  *time.Time `json:"pinned_at"`
}

type Role struct {
	ID        int64          `json:"id"`
	CreatedAt time.Time      `json:"created_at"`
	UpdatedAt time.Time      `json:"updated_at"`
	Name      string         `json:"name"`
	System    string         `json:"system"`
	Model     string         `json:"model"`
	Purpose   common.Purpose `json:"purpose"`
}

type Session struct {
	Token     string    `json:"token"`
	Content   []byte    `json:"content"`
	ExpiresAt time.Time `json:"expires_at"`
}
